/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC/~ |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // | TAB   |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |RET/SFT|
            // | PLAY  | LCTL | LALT | LGUI | LOWR |     SPACE    |  RAIS | LARW | UARW | DARW  |  RARW |

            bindings = <
&kp ESC    &kp Q     &kp W     &kp E        &kp R  &kp T      &kp Y      &kp U  &kp I      &kp O     &kp P     &kp BSPC
&kp TAB    &kp A     &kp S     &kp D        &kp F  &kp G      &kp H      &kp J  &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z     &kp X     &kp C        &kp V  &kp B      &kp N      &kp M  &kp COMMA  &kp DOT   &kp UP    &kp RSHFT
&kp LCTRL  &kp LGUI  &kp LALT  &ime_switch  &mo 1  &kp SPACE  &kp ENTER  &mo 2  &kp RALT   &kp LEFT  &kp DOWN  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower {
            bindings = <
&kp ESC    &kp N7    &kp N8    &kp N9       &kp N0     &kp EQUAL  &trans     &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG
&kp CAPS   &kp N4    &kp N5    &kp N6       &kp COMMA  &kp MINUS  &kp SLASH  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI
&kp LSHFT  &kp N1    &kp N2    &kp N3       &kp DOT    &kp PLUS   &kp ASTRK  &trans           &trans           &trans           &kp PAGE_UP      &rgb_ug RGB_SPD
&kp LCTRL  &kp LGUI  &kp LALT  &ime_switch  &mo 1      &kp SPACE  &kp ENTER  &mo 2            &kp RALT         &trans           &kp PAGE_DOWN    &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        raise {
            bindings = <
&kp ESC    &kp F9    &kp F10   &kp F11      &kp F12  &trans     &trans     &trans  &trans    &kp MINUS      &kp EQUAL   &kp DEL
&kp TAB    &kp F5    &kp F6    &kp F7       &kp F8   &trans     &trans     &trans  &trans    &kp LBKT       &kp RBKT    &kp BSLH
&kp LSHFT  &kp F1    &kp F2    &kp F3       &kp F4   &trans     &trans     &trans  &trans    &kp LG(LS(S))  &kp SLASH   &kp RSHFT
&kp LCTRL  &kp LGUI  &kp LALT  &ime_switch  &mo 1    &kp SPACE  &kp ENTER  &mo 2   &kp RALT  &trans         &bt BT_PRV  &bt BT_NXT
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

        control {
            bindings = <
&sys_reset       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans  &trans  &trans      &trans  &trans  &bt BT_CLR
&rgb_ug RGB_ON   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &trans  &trans  &trans      &trans  &trans  &trans
&rgb_ug RGB_OFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans  &trans  &trans      &trans  &trans  &studio_unlock
&bootloader      &trans           &trans           &trans           &trans           &trans           &trans  &trans  &bt BT_PRV  &trans  &trans  &bt BT_NXT
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };

        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };

        extra3 { status = "reserved"; };

        extra4 { status = "reserved"; };
    };
};
